{
	"info": {
		"_postman_id": "fab52fc6-c1e3-4470-97c0-00055561d736",
		"name": "E2E Scenario #1",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "42952062",
		"_collection_link": "https://www.postman.com/amkaswathy/workspace/atb10x/collection/42952062-fab52fc6-c1e3-4470-97c0-00055561d736?action=share&source=collection_link&creator=42952062"
	},
	"item": [
		{
			"name": "CreateBooking",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"console.log(\"Before making the Request\")\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"TC#1 -Verify that the Firstname==Jim\" ,function(){\r",
							"    //get the response-json, fetch the firstname from the json\r",
							"    //verify that firstname== \"Jim\"\r",
							"    var responseJSON= pm.response.json();\r",
							"    var booking= responseJSON[\"booking\"]\r",
							"    var firstname=booking[\"firstname\"]\r",
							"    pm.expect(firstname).to.be.equal(\"Jim\")\r",
							"}\r",
							")\r",
							"\r",
							"pm.test(\"TC#3 Verify that booking ID is not null\", function(){\r",
							"    var responseJSON= pm.response.json();\r",
							"    var booking= responseJSON[\"booking\"]\r",
							"    var bookingId= responseJSON[\"bookingid\"]\r",
							"    pm.environment.set(\"bookingId\",bookingId)\r",
							"    pm.expect(bookingId).to.not.equal(null)\r",
							"}\r",
							")\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{vault:authorization-password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\" : \"Jim\",\r\n    \"lastname\" : \"Brown\",\r\n    \"totalprice\" : 111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-01-01\",\r\n        \"checkout\" : \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://restful-booker.herokuapp.com/booking",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"booking"
					]
				}
			},
			"response": []
		},
		{
			"name": "Full Update Booking by ID (Basic Auth)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"\tpm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//Test case to verify that Jim -> James after PUT request\r",
							"\r",
							"pm.test(\"TC#2 -Verify that the Firstname==James\" ,function(){\r",
							"    //get the response-json, fetch the firstname from the json\r",
							"    //verify that firstname== \"James\"\r",
							"    var responseJSON= pm.response.json();\r",
							"       var firstname=responseJSON[\"firstname\"]\r",
							"    pm.expect(firstname).to.be.equal(\"James\")\r",
							"\t\t}\r",
							"\t\t)\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{vault:authorization-password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Cookie",
						"value": "token=abc123"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\" : \"James\",\r\n    \"lastname\" : \"Brown\",\r\n    \"totalprice\" : 111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-01-01\",\r\n        \"checkout\" : \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://restful-booker.herokuapp.com/booking/{{bookingId}}",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"booking",
						"{{bookingId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Full Update Booking by ID -Token Auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"\tpm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//Test case to verify that Jim -> James after PUT request\r",
							"\r",
							"pm.test(\"TC#2 -Verify that the Firstname==James\" ,function(){\r",
							"    //get the response-json, fetch the firstname from the json\r",
							"    //verify that firstname== \"James\"\r",
							"    var responseJSON= pm.response.json();\r",
							"       var firstname=responseJSON[\"firstname\"]\r",
							"    pm.expect(firstname).to.be.equal(\"James\")\r",
							"\t\t}\r",
							"\t\t)\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Cookie",
						"value": "token={{token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\" : \"James\",\r\n    \"lastname\" : \"Brown\",\r\n    \"totalprice\" : 111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-01-01\",\r\n        \"checkout\" : \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://restful-booker.herokuapp.com/booking/{{bookingId}}",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"booking",
						"{{bookingId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetBooking by Single ID(No Auth) Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"TC#2 -Verify that the Firstname==James\" ,function(){\r",
							"    //get the response-json, fetch the firstname from the json\r",
							"    //verify that firstname== \"James\"\r",
							"    var responseJSON= pm.response.json();\r",
							"       var firstname=responseJSON[\"firstname\"]\r",
							"    pm.expect(firstname).to.be.equal(\"James\")\r",
							"\t\t}\r",
							"\t\t)\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://restful-booker.herokuapp.com/booking/{{bookingId}}",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"booking",
						"{{bookingId}}"
					]
				}
			},
			"response": []
		}
	]
}